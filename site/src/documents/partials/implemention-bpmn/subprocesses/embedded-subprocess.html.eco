<section id="subprocess-embedded">

  <div class="page-header">
      <h1>Subprocess (embedded)</h1>
  </div>
  
  <div class="row-fluid">
  <div class="span9">
      <p>
        A subprocess is an activity that contains other activities, gateways, events, etc. which on itself form a process that is part of the bigger process. A Subprocess is completely defined inside a parent process (that's why it's often called an embedded Subprocess).
      </p>
      Subprocesses have two major use cases:
      <ul>
        <li>
          Subprocess allow hierarchical modeling. Many modeling tools allow that subprocess can be collapsed, hiding all the details of the subprocess and displaying a high-level end-to-end overview of the business process.
        </li>
        <li>
          A subprocess creates a new scope for events. Events that are thrown during execution of the subprocess, can be caught by a boundary event on the boundary of the subprocess, thus creating a scope for that event limited to the subprocess.
        </li>
      </ul>

      Using a subprocess does impose some constraints:
      <ul>
        <li>
      A subprocess can only have one none start event, no other start event types are allowed. A subprocess must at least have one end event. Note that the BPMN 2.0 specification allows to omit the start and end events in a subprocess, but the current engine implementation does not support this.
        </li>
        <li>
      Sequence flow can not cross subprocess boundaries.
        </li>
      </ul>



    </div>
    <div class="span3">
      <h3>On this page</h3>
      <ul>            
          <li>Subprocess (embedded)</li>
      </ul>
      <h3>There's more...</h3>
      <ul>            
          <li><a href="<%= @docUrl('design/reference.html') %>#/activities/subprocess">Subprocesses in the BPMN Tutorial</a></li>
          <li><a href="https://app.camunda.com/confluence/display/foxUserGuide/Process+Decomposition">Process Decomposition</a></li>
      </ul>      
    </div>
  </div>
  

<p>
  A subprocess is visualized as a typical activity, i.e. a rounded rectangle. In case the subprocess is collapsed, only the name and a plus-sign are displayed, giving a high-level overview of the process:
</p>

<div id="subprocess" style="position:relative" data-bpmn-src="tutorial/subprocess"> </div>

<p>
In case the subprocess is expanded, the steps of the subprocess are displayed within the subprocess boundaries:
</p>

      <div id="subprocess_expanded" style="position:relative" data-bpmn-src="tutorial/subprocess_expanded"> </div>

<p>
One of the main reasons to use a subprocess, is to define a scope for a certain event. The following process model shows this: both the investigate software/investigate hardware tasks need to be done in parallel, but both tasks need to be done within a certain time, before Level 2 support is consulted. Here, the scope of the timer (i.e. which activities must be done in time) is constrained by the subprocess.
</p>

      <div id="subprocess_attached" style="position:relative" data-bpmn-src="tutorial/subprocess_attached"> </div>

<p>
A subprocess is defined by the subprocess element. All activities, gateways, events, etc. that are part of the subprocess, need to be enclosed within this element.
</p>

<div class="app-source" app-source-no-tabs="xml" ></div>
<script type="text/xml" id="xml">
<startEvent id="outerStartEvent" />
... other elements ...
<subProcess id="subProcess">
   <startEvent id="subProcessStart" />
   ... other subprocess elements ...
   <endEvent id="subProcessEnd" />
</subProcess>           
</script>

	
</section>